Problem Statement
Given a string s, find the longest substring in s. A substring is a contiguous sequence of characters within a string, which is also a palindrome.

A palindrome is a word, phrase, or sequence that reads the same backward as forwards.

Input Format
A string s is taken as input.

Output Format
A string representing the longest palindromic substring is returned.

Constraints
1<=s.length <=1000
s consist of only digits and English letters

Sample Testcase 0
Testcase Input
aaaabbaa
Testcase Output
aabbaa

Explanation
The substring aabbaa is the longest substring in aaaabbaa,also a palindrome.
Sample Testcase 1
Testcase Input
aaabbbaaacda
Testcase Output
aaabbbaaa

Explanation
The substring aaabbbaaa is the longest substring in aaabbbaaacda, also a palindrome.

/*Ans is given Below*/
# Enter your code here. Read input from STDIN. Print output to STDOUT
s = input()
res = ""
reslen = 0
        
for i in range(len(s)):
    #odd length
    l, r = i, i
    while l >= 0 and r < len(s) and s[l] == s[r]:
        if (r - l + 1) >= reslen:
            res = s[l:r+1]
            reslen = r - l + 1
                    
        l -= 1
        r += 1
                
    #even length
    l, r = i, i + 1
    while l >= 0 and r < len(s) and s[l] == s[r]:
        if (r - l + 1) >= reslen:
            res = s[l:r+1]
            reslen = r - l + 1
                    
        l -= 1
        r += 1
                
print(res)
